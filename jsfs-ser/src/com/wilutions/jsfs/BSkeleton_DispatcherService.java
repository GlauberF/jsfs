package com.wilutions.jsfs;

/*
 * 
 * THIS FILE HAS BEEN GENERATED BY class byps.gen.j.GenRemoteSkeleton DO NOT MODIFY.
 */

import byps.*;

/**
 * This class provides a skeleton implementation of the interface DispatcherService.
 * Your interface implementation class has to be derived from this skeleton.
 * Either provide an asynchronous or a synchronous function in your subclass.
 * The framework calls only the asynchronous function.
 */
@SuppressWarnings("all")
public class BSkeleton_DispatcherService extends BSkeleton implements DispatcherServiceAsync {
	
	public final static long serialVersionUID = 1153231042L;
	
	// checkpoint byps.gen.j.PrintContext:365
	public void registerService(java.lang.String token, FileSystemService service) throws RemoteException {
		throw new BException(BExceptionC.UNSUPPORTED_METHOD, "");
	}
	// checkpoint byps.gen.j.PrintContext:409
	public void registerService(java.lang.String token, FileSystemService service, final BAsyncResult<Object> asyncResult) {
		try {
			registerService(token, service);
			asyncResult.setAsyncResult(null, null);
		} catch (Throwable e) {
			asyncResult.setAsyncResult(null, e);
		}
	}
	
	// checkpoint byps.gen.j.PrintContext:365
	public void unregisterService(java.lang.String token) throws RemoteException {
		throw new BException(BExceptionC.UNSUPPORTED_METHOD, "");
	}
	// checkpoint byps.gen.j.PrintContext:409
	public void unregisterService(java.lang.String token, final BAsyncResult<Object> asyncResult) {
		try {
			unregisterService(token);
			asyncResult.setAsyncResult(null, null);
		} catch (Throwable e) {
			asyncResult.setAsyncResult(null, e);
		}
	}
	
	// checkpoint byps.gen.j.PrintContext:365
	public FileSystemService getService(java.lang.String token, boolean onlyHere) throws RemoteException {
		throw new BException(BExceptionC.UNSUPPORTED_METHOD, "");
	}
	// checkpoint byps.gen.j.PrintContext:409
	public void getService(java.lang.String token, boolean onlyHere, final BAsyncResult<FileSystemService> asyncResult) {
		try {
			FileSystemService ret = getService(token, onlyHere);
			asyncResult.setAsyncResult(ret, null);
		} catch (Throwable e) {
			asyncResult.setAsyncResult(null, e);
		}
	}
	
	// checkpoint byps.gen.j.PrintContext:365
	public void registerNotifyService(java.lang.String token, FileSystemNotify service) throws RemoteException {
		throw new BException(BExceptionC.UNSUPPORTED_METHOD, "");
	}
	// checkpoint byps.gen.j.PrintContext:409
	public void registerNotifyService(java.lang.String token, FileSystemNotify service, final BAsyncResult<Object> asyncResult) {
		try {
			registerNotifyService(token, service);
			asyncResult.setAsyncResult(null, null);
		} catch (Throwable e) {
			asyncResult.setAsyncResult(null, e);
		}
	}
	
	// checkpoint byps.gen.j.PrintContext:365
	public void unregisterNotifyService(java.lang.String token) throws RemoteException {
		throw new BException(BExceptionC.UNSUPPORTED_METHOD, "");
	}
	// checkpoint byps.gen.j.PrintContext:409
	public void unregisterNotifyService(java.lang.String token, final BAsyncResult<Object> asyncResult) {
		try {
			unregisterNotifyService(token);
			asyncResult.setAsyncResult(null, null);
		} catch (Throwable e) {
			asyncResult.setAsyncResult(null, e);
		}
	}
	
	// checkpoint byps.gen.j.PrintContext:365
	public FileSystemNotify getNotifyService(java.lang.String token, boolean onlyHere) throws RemoteException {
		throw new BException(BExceptionC.UNSUPPORTED_METHOD, "");
	}
	// checkpoint byps.gen.j.PrintContext:409
	public void getNotifyService(java.lang.String token, boolean onlyHere, final BAsyncResult<FileSystemNotify> asyncResult) {
		try {
			FileSystemNotify ret = getNotifyService(token, onlyHere);
			asyncResult.setAsyncResult(ret, null);
		} catch (Throwable e) {
			asyncResult.setAsyncResult(null, e);
		}
	}
	
	// checkpoint byps.gen.j.PrintContext:365
	public void keepAlive(java.lang.String token) throws RemoteException {
		throw new BException(BExceptionC.UNSUPPORTED_METHOD, "");
	}
	// checkpoint byps.gen.j.PrintContext:409
	public void keepAlive(java.lang.String token, final BAsyncResult<Object> asyncResult) {
		try {
			keepAlive(token);
			asyncResult.setAsyncResult(null, null);
		} catch (Throwable e) {
			asyncResult.setAsyncResult(null, e);
		}
	}
	
	
}
